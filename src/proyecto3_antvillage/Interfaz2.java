
package proyecto3_antvillage;

//Se importan las bibliotecas
import java.awt.Color;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.EOFException;
import java.io.IOException;
import java.net.Socket;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import static javax.swing.SwingConstants.CENTER;
import static javax.swing.SwingConstants.TOP;

/**
 *Representa el cliente
 * @author Roger Solano
 */
public class Interfaz2 extends javax.swing.JFrame {
    
    static boolean botonEnabled = false; // estado del botón de start.
    static List_posiciones coordenadas = new List_posiciones();
    int recorrido = 0; // progreso de la hormiga en la simulacion
    Imagenes imagenes = new Imagenes(); //Referencia a las imagenes
    static String mensaje = ""; //Mensajes que se envian y se reciben

    static Socket socket; // Creacion de socket
    static DataInputStream datoEntrada;
    static DataOutputStream datoSalida;

    /**
     * Creates new form Interfaz2
     */
    public Interfaz2() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        B_start = new javax.swing.JLabel();
        Food_3 = new javax.swing.JLabel();
        Food_2 = new javax.swing.JLabel();
        Food = new javax.swing.JLabel();
        N_azul = new javax.swing.JLabel();
        H_azul = new javax.swing.JLabel();
        N_verde = new javax.swing.JLabel();
        H_verde = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        B_start.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto3_antvillage/images/B.start.png"))); // NOI18N
        B_start.setText("jLabel1");
        B_start.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                B_startMouseClicked(evt);
            }
        });

        Food_3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto3_antvillage/images/Food_3.png"))); // NOI18N

        Food_2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto3_antvillage/images/Food_2.png"))); // NOI18N

        Food.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto3_antvillage/images/Food.png"))); // NOI18N

        N_azul.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto3_antvillage/images/nido_azul.png"))); // NOI18N

        H_azul.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto3_antvillage/images/Hormiga_azul.png"))); // NOI18N

        N_verde.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto3_antvillage/images/nido_verde.png"))); // NOI18N

        H_verde.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto3_antvillage/images/Hormiga_verde.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(B_start, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(310, 310, 310)
                        .addComponent(Food_2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 313, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(N_azul, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(H_azul, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(188, 188, 188)
                                .addComponent(Food_3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Food, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(H_verde, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(N_verde, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(B_start, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(Food_2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(Food, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 130, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(H_verde, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(N_azul, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(H_azul, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(N_verde, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(Food_3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*
    * Función del botón start
    */
    private void B_startMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_B_startMouseClicked
        // TODO add your handling code here:
            // Arreglo de tipo JLabel que contiene cada una de los nodos del grafo
            JLabel[] posiciones = new JLabel[]{H_azul, H_verde, Food, Food_2, Food_3, N_azul, N_verde};
            Asignar_posiciones listaposicionesRandom = new Asignar_posiciones();
            int[] posicionesRandom; // Se generan las posiciones de una manera aleatoria
            posicionesRandom = listaposicionesRandom.dequeue();
            
            // Envia información de las posiciones
            try {
                datoSalida.writeUTF("posicion");
            } catch (IOException ex) {
                Logger.getLogger(Interfaz2.class.getName()).log(Level.SEVERE, null, ex);
            }
        
            //Recorrer las posiciones
            for (int i = 0; i <= posiciones.length; i++) {
                if (i != posiciones.length) {
                    JLabel posicion = posiciones[i];
                    String index = String.valueOf(posicionesRandom[i]);
                    
                    // Avisa sobre el recorrido
                    try {
                        datoSalida.writeUTF(index);
                    } catch (IOException ex) {
                        Logger.getLogger(Interfaz2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    // Se elige dependiendo del caso el tipo de posiciones
                    switch (posicionesRandom[i]) {
                        case 1:
                            coordenadas.insertLast(posicion.getX(), posicion.getY(), posicionesRandom[i]);
                            posicion.setIcon(imagenes.Food);
                            break;
                        case 2:
                            coordenadas.insertLast(posicion.getX(), posicion.getY(), posicionesRandom[i]);
                            posicion.setIcon(imagenes.N_verde);
                            break;
                        case 3:
                            coordenadas.insertLast(posicion.getX(), posicion.getY(), posicionesRandom[i]);
                            posicion.setIcon(imagenes.N_azul);
                            break;
                    }
                 
                } else {
                        coordenadas.insertFinal(N_azul.getX(), N_azul.getY());
                    }
                }
                // Le avisa a la interfaz el comienzo de la simulación
                try {
                    datoSalida.writeUTF("iniciar");
                } catch (IOException ex) {
                    Logger.getLogger(Interfaz2.class.getName()).log(Level.SEVERE, null, ex);
                }
                H_verde.setLocation(N_verde.getX() + 20, N_verde.getY());
                H_azul.setLocation(N_azul.getX(), N_azul.getY());
            
    }//GEN-LAST:event_B_startMouseClicked
    
    // Finaliza la simulación
    public void finalizarJuego() {
        String msjRecorrido = String.valueOf(recorrido);
        try {
            datoSalida.writeUTF("fin del juego\n" + msjRecorrido);
        } catch (IOException ex) {
            Logger.getLogger(Interfaz2.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            datoSalida.close();
        } catch (IOException ex) {
            Logger.getLogger(Interfaz2.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            datoEntrada.close();
        } catch (IOException ex) {
            Logger.getLogger(Interfaz2.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            socket.close();
        } catch (IOException ex) {
            Logger.getLogger(Interfaz2.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return;
    }
    
    /**
     * @param args 
     */
    public static void main(String args[]) throws IOException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz2().setVisible(true);
            }
        });
        // Socket para el cliente
        try {
            socket = new Socket("127.0.0.1", 1201);
            datoEntrada = new DataInputStream(socket.getInputStream());
            datoSalida = new DataOutputStream(socket.getOutputStream());

            //Esta atento a escuchar los mensajes que vienen de interfaz
            while (true) {
                try {
                    mensaje = datoEntrada.readUTF();
                } catch (java.net.SocketException ex) {
                } catch (IOException ex) {
                    Logger.getLogger(Interfaz2.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                String[] msjAvance = mensaje.split("\n");
                int AvanceH_verde = Integer.parseInt(msjAvance[1]);
                
                if (AvanceH_verde <= 0) {
                    //H_verde.setLocation(N_verde.getX() + 20 , N_verde.getY());
                    //botonEnabled = true;

                    // se actualiza el progreso de la hormiga
                } else if (msjAvance[0].equals("esperando")) {
                    int[] coordenadasposiciones;
                    coordenadasposiciones = coordenadas.ObtenerCoordenadas(AvanceH_verde);
                    //H_verde.setLocation(coordenadasposiciones[0] + 20, coordenadasposiciones[1]);
                //se cumple cuando la hormiga haya llegado
                } else if (msjAvance[0].equals("fin del juego")) {
                    int[] coordenadasposiciones;
                    coordenadasposiciones = coordenadas.ObtenerCoordenadas(AvanceH_verde);
                    //H_verde.setLocation(coordenadasposiciones[0] + 20, coordenadasposiciones[1]);
                    //botonEnabled = false;
                    try {
                        socket.close();
                    } catch (IOException ex) {
                    }
                    try {
                        datoSalida.close();
                    } catch (IOException ex) {
                    }
                    try {
                        datoEntrada.close();
                    } catch (IOException ex) {
                    }

                    return;

                    /* se actualiza el progreso del jugador 1 o si el otro jugador responde de forma incorrecta 
                    la pregunta de reto*/
                } else {
                    int[] coordenadasposiciones;
                    coordenadasposiciones = coordenadas.ObtenerCoordenadas(AvanceH_verde);
                    //H_verde.setLocation(coordenadasposiciones[0] + 20, coordenadasposiciones[1]);
                    //buttonDado2.setEnabled(true);
                    //botonEnabled = true;
                }

                }         
    } catch (IOException ex) {
            Logger.getLogger(Interfaz2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel B_start;
    private javax.swing.JLabel Food;
    private javax.swing.JLabel Food_2;
    private javax.swing.JLabel Food_3;
    private javax.swing.JLabel H_azul;
    private javax.swing.JLabel H_verde;
    private javax.swing.JLabel N_azul;
    private javax.swing.JLabel N_verde;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
