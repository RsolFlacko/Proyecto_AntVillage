
package proyecto3_antvillage;

//Se importan las bibliotecas
import java.awt.Color;
import java.awt.Image;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.EOFException;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import static javax.swing.SwingConstants.CENTER;
import static javax.swing.SwingConstants.TOP;

/**
 * Esto representa la interfaz del programa 
 * @author Roger Solano
 */
public class Interfaz extends javax.swing.JFrame {

    static int close = 1;   // variable asociada al bucle donde se reciben los mensajes del Interfaz2.
    static boolean botonEnabled = true; // estado del bot√≥n start.
    static List_posiciones coordenadas = new List_posiciones();
    static int recorrido = 0; // progreso de la hormiga en la simulacion
    static Imagenes imagenes = new Imagenes(); //Referencia a las imagenes
    static String mensaje = ""; //Mensajes que se envian y se reciben

    static ServerSocket serverSocket; // Creacion del serverSocket
    static Socket socket;
    static DataInputStream datoEntrada;
    static DataOutputStream datoSalida;
    
    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        H_azul = new javax.swing.JLabel();
        H_verde = new javax.swing.JLabel();
        N_azul = new javax.swing.JLabel();
        N_verde = new javax.swing.JLabel();
        Food = new javax.swing.JLabel();
        Food_2 = new javax.swing.JLabel();
        Food_3 = new javax.swing.JLabel();
        B_start = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        H_azul.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto3_antvillage/images/Hormiga_azul.png"))); // NOI18N

        H_verde.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto3_antvillage/images/Hormiga_verde.png"))); // NOI18N

        N_azul.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto3_antvillage/images/nido_azul.png"))); // NOI18N

        N_verde.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto3_antvillage/images/nido_verde.png"))); // NOI18N

        Food.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto3_antvillage/images/Food.png"))); // NOI18N

        Food_2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto3_antvillage/images/Food_2.png"))); // NOI18N

        Food_3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto3_antvillage/images/Food_3.png"))); // NOI18N

        B_start.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto3_antvillage/images/B.start.png"))); // NOI18N
        B_start.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                B_startMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(B_start, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(325, 325, 325)
                        .addComponent(Food_2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(136, 136, 136))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(N_azul, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(H_azul, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(H_verde, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(N_verde, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(227, 227, 227)
                .addComponent(Food, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Food_3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(132, 132, 132))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(B_start, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Food_2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(59, 59, 59)
                        .addComponent(Food_3, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(Food, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(H_verde, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(N_verde, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(334, 334, 334))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(84, 84, 84)
                                .addComponent(N_azul, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(H_azul, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Detecta cuando se clickea el bot√≥n start
    private void B_startMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_B_startMouseClicked
        // TODO add your handling code here:
        if (botonEnabled) {
            try {
             //se actualiza el progreso de la hormiga 

                    int[] coordenadasposiciones;
                    coordenadasposiciones = coordenadas.ObtenerCoordenadas(recorrido);  

                    if (recorrido >= 4) {
                        recorrido = 5;
                        finalizarJuego();
                        coordenadasposiciones = coordenadas.ObtenerCoordenadas(recorrido);
                        H_verde.setLocation(coordenadasposiciones[0], coordenadasposiciones[1]);

                        return;
                        
                    }
                    //se cumple si la hormiga est√° en las posiciones de comida
                    if (coordenadasposiciones[2] == 1) {
                        coordenadasposiciones = coordenadas.ObtenerCoordenadas(recorrido);
                        H_verde.setLocation(coordenadasposiciones[0], coordenadasposiciones[1]);
                        return;

                    } 
                    
                    // se env√≠a una actualizaci√≥n del progreso de las interfaces
                    String msjRecorrido = String.valueOf(recorrido);
                    datoSalida.writeUTF("es tu turno\n" + msjRecorrido);

                    botonEnabled = false;

        } catch (IOException ex) {
                Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
            }
            }
               
    }//GEN-LAST:event_B_startMouseClicked
     // Funci√≥n para terminar la simulaci√≥n
    public void finalizarJuego() {
        String msjRecorrido = String.valueOf(recorrido);
        close = 0;
        try {
            datoSalida.writeUTF("fin del juego\n" + msjRecorrido);
        } catch (IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            socket.close();
        } catch (IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            datoEntrada.close();
        } catch (IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            datoSalida.close();

        } catch (IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            serverSocket.close();
        } catch (IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }

        botonEnabled = false;
 
        return;
    }   
     
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
        
        //Creaci√≥n del servidor
        try {
            serverSocket = new ServerSocket(1201);
            socket = serverSocket.accept();
            datoEntrada = new DataInputStream(socket.getInputStream());
            datoSalida = new DataOutputStream(socket.getOutputStream());
        } catch (IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //Variables de las posiciones
        JLabel Food = null;
        JLabel Food_2 = null;
        JLabel Food_3 = null;
        JLabel H_azul = null;
        JLabel H_verde = null;
        JLabel N_azul = null;
        JLabel N_verde = null;
        
        JLabel[] posiciones = new JLabel[]{H_azul, H_verde, Food, Food_2, Food_3, N_azul, N_verde};
        
        //Se leen los mensajes de la Interfaz2
        while (close == 1) {
            try {
                mensaje = datoEntrada.readUTF();
            } catch (java.net.SocketException ex) {
            } catch (IOException ex) {
                Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
   
            }
            
            //se asignan el tipo de posicion aleatorio con su imagen respectiva recibidas de la hormiga azul
            if (mensaje.equals("posicion")) {

                for (int i = 0; i <= posiciones.length; i++) {
                    if (i != posiciones.length) {
                        try {
                            mensaje = datoEntrada.readUTF();
                        } catch (java.io.EOFException ex) {
                            Logger.getLogger(Interfaz2.class.getName()).log(Level.SEVERE, null, ex);
                        } catch (IOException e) {

                        }
    
     
    
                   int index = Integer.parseInt(mensaje);
                   JLabel posicion = posiciones[i];
                    
                   //Se ve el tipo de posicion en la simulacion
                   switch (index) {
                        case 1:
                            coordenadas.insertLast(posicion.getX(), posicion.getY(), index);
                            posicion.setIcon(imagenes.Food);
                            break;
                        case 2:
                            coordenadas.insertLast(posicion.getX(), posicion.getY(), index);
                            posicion.setIcon(imagenes.N_verde);
                            break;
                        case 3:
                            coordenadas.insertLast(posicion.getX(), posicion.getY(), index);
                            posicion.setIcon(imagenes.N_azul);
                            break;
                    }
                }   else {
                    coordenadas.insertFinal(N_verde.getX(), N_verde.getY());
                }
                
          }
            } else {
               // condici√≥n que se cumple cuando se inicia la simulacion
                if (mensaje.equals("start")) {

                    mensaje = ""; 
                    
                }else {
                    //se obtiene dos mensajes enviados por la Interfaz2 y se guardan en un arreglo
                    String[] msjAvance = mensaje.split("\n");
                    if (mensaje.equals("")) {
                        H_azul.setLocation(H_azul.getX() + 20, H_azul.getY());

                    } else {

                        int AvanceH_azul = Integer.parseInt(msjAvance[1]);

                        if (AvanceH_azul <= 0) {
                            H_azul.setLocation(N_azul.getX() + 20, N_azul.getY());
                            
                        } else if (msjAvance[0].equals("esperando")) {
                            int[] coordenadasposiciones;
                            coordenadasposiciones = coordenadas.ObtenerCoordenadas(AvanceH_azul);
                            H_azul.setLocation(coordenadasposiciones[0] + 20, coordenadasposiciones[1]);

                            //se cumple cuando se termina la simulacion
                        } else if (msjAvance[0].equals("fin del juego")) {
                            int[] coordenadasposiciones;
                            coordenadasposiciones = coordenadas.ObtenerCoordenadas(AvanceH_azul);
                            H_azul.setLocation(coordenadasposiciones[0] + 20, coordenadasposiciones[1]);

                            try {
                                socket.close();
                            } catch (IOException ex) {
                            }
                            try {
                                datoSalida.close();
                            } catch (IOException ex) {
                            }
                            try {
                                datoEntrada.close();
                            } catch (IOException ex) {
                            }
                            try {
                                serverSocket.close();
                            } catch (IOException e) {

                            }
                            return;

                            // se actualiza el progreso de la hormiga 
                        } else {
                            int[] coordenadasposiciones;
                            coordenadasposiciones = coordenadas.ObtenerCoordenadas(AvanceH_azul);
                            H_azul.setLocation(coordenadasposiciones[0] + 20, coordenadasposiciones[1]);
}

                    }

                }
            }

        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel B_start;
    private javax.swing.JLabel Food;
    private javax.swing.JLabel Food_2;
    private javax.swing.JLabel Food_3;
    private javax.swing.JLabel H_azul;
    private javax.swing.JLabel H_verde;
    private javax.swing.JLabel N_azul;
    private javax.swing.JLabel N_verde;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
